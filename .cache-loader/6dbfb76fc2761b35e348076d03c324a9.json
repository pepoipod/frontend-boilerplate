{"remainingRequest":"/Users/iwamoto/dev/cshool/frontend-boilerplate/node_modules/thread-loader/dist/cjs.js??ref--4-1!/Users/iwamoto/dev/cshool/frontend-boilerplate/node_modules/babel-loader/lib/index.js??ref--4-2!/Users/iwamoto/dev/cshool/frontend-boilerplate/node_modules/core-js/modules/es6.math.hypot.js","dependencies":[{"path":"/Users/iwamoto/dev/cshool/frontend-boilerplate/node_modules/core-js/modules/es6.math.hypot.js","mtime":1523240795000},{"path":"/Users/iwamoto/dev/cshool/frontend-boilerplate/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/iwamoto/dev/cshool/frontend-boilerplate/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iwamoto/dev/cshool/frontend-boilerplate/node_modules/babel-loader/lib/index.js","mtime":1520329890000}],"contextDependencies":[],"result":["// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])\nvar $export = require('./_export');\nvar abs = Math.abs;\n\n$export($export.S, 'Math', {\n  hypot: function hypot(value1, value2) {\n    // eslint-disable-line no-unused-vars\n    var sum = 0;\n    var i = 0;\n    var aLen = arguments.length;\n    var larg = 0;\n    var arg, div;\n    while (i < aLen) {\n      arg = abs(arguments[i++]);\n      if (larg < arg) {\n        div = larg / arg;\n        sum = sum * div * div + 1;\n        larg = arg;\n      } else if (arg > 0) {\n        div = arg / larg;\n        sum += div * div;\n      } else sum += arg;\n    }\n    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);\n  }\n});",{"version":3,"sources":["node_modules/core-js/modules/es6.math.hypot.js"],"names":["$export","require","abs","Math","S","hypot","value1","value2","sum","i","aLen","arguments","length","larg","arg","div","Infinity","sqrt"],"mappings":"AAAA;AACA,IAAIA,UAAUC,QAAQ,WAAR,CAAd;AACA,IAAIC,MAAMC,KAAKD,GAAf;;AAEAF,QAAQA,QAAQI,CAAhB,EAAmB,MAAnB,EAA2B;AACzBC,SAAO,SAASA,KAAT,CAAeC,MAAf,EAAuBC,MAAvB,EAA+B;AAAE;AACtC,QAAIC,MAAM,CAAV;AACA,QAAIC,IAAI,CAAR;AACA,QAAIC,OAAOC,UAAUC,MAArB;AACA,QAAIC,OAAO,CAAX;AACA,QAAIC,GAAJ,EAASC,GAAT;AACA,WAAON,IAAIC,IAAX,EAAiB;AACfI,YAAMZ,IAAIS,UAAUF,GAAV,CAAJ,CAAN;AACA,UAAII,OAAOC,GAAX,EAAgB;AACdC,cAAMF,OAAOC,GAAb;AACAN,cAAMA,MAAMO,GAAN,GAAYA,GAAZ,GAAkB,CAAxB;AACAF,eAAOC,GAAP;AACD,OAJD,MAIO,IAAIA,MAAM,CAAV,EAAa;AAClBC,cAAMD,MAAMD,IAAZ;AACAL,eAAOO,MAAMA,GAAb;AACD,OAHM,MAGAP,OAAOM,GAAP;AACR;AACD,WAAOD,SAASG,QAAT,GAAoBA,QAApB,GAA+BH,OAAOV,KAAKc,IAAL,CAAUT,GAAV,CAA7C;AACD;AAnBwB,CAA3B","file":"es6.math.hypot.js","sourceRoot":"/Users/iwamoto/dev/cshool/frontend-boilerplate","sourcesContent":["// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])\nvar $export = require('./_export');\nvar abs = Math.abs;\n\n$export($export.S, 'Math', {\n  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars\n    var sum = 0;\n    var i = 0;\n    var aLen = arguments.length;\n    var larg = 0;\n    var arg, div;\n    while (i < aLen) {\n      arg = abs(arguments[i++]);\n      if (larg < arg) {\n        div = larg / arg;\n        sum = sum * div * div + 1;\n        larg = arg;\n      } else if (arg > 0) {\n        div = arg / larg;\n        sum += div * div;\n      } else sum += arg;\n    }\n    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);\n  }\n});\n"]}]}