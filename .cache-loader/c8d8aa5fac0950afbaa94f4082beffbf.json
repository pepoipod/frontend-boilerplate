{"remainingRequest":"/Users/iwamoto/dev/cshool/frontend-boilerplate/node_modules/thread-loader/dist/cjs.js??ref--4-1!/Users/iwamoto/dev/cshool/frontend-boilerplate/node_modules/babel-loader/lib/index.js??ref--4-2!/Users/iwamoto/dev/cshool/frontend-boilerplate/node_modules/core-js/modules/_string-context.js","dependencies":[{"path":"/Users/iwamoto/dev/cshool/frontend-boilerplate/node_modules/core-js/modules/_string-context.js","mtime":1523240795000},{"path":"/Users/iwamoto/dev/cshool/frontend-boilerplate/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/iwamoto/dev/cshool/frontend-boilerplate/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iwamoto/dev/cshool/frontend-boilerplate/node_modules/babel-loader/lib/index.js","mtime":1520329890000}],"contextDependencies":[],"result":["// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};",{"version":3,"sources":["node_modules/core-js/modules/_string-context.js"],"names":["isRegExp","require","defined","module","exports","that","searchString","NAME","TypeError","String"],"mappings":"AAAA;AACA,IAAIA,WAAWC,QAAQ,cAAR,CAAf;AACA,IAAIC,UAAUD,QAAQ,YAAR,CAAd;;AAEAE,OAAOC,OAAP,GAAiB,UAAUC,IAAV,EAAgBC,YAAhB,EAA8BC,IAA9B,EAAoC;AACnD,MAAIP,SAASM,YAAT,CAAJ,EAA4B,MAAME,UAAU,YAAYD,IAAZ,GAAmB,wBAA7B,CAAN;AAC5B,SAAOE,OAAOP,QAAQG,IAAR,CAAP,CAAP;AACD,CAHD","file":"_string-context.js","sourceRoot":"/Users/iwamoto/dev/cshool/frontend-boilerplate","sourcesContent":["// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n"]}]}