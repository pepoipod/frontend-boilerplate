{"remainingRequest":"/Users/iwamoto/dev/cshool/frontend-boilerplate/node_modules/thread-loader/dist/cjs.js??ref--4-1!/Users/iwamoto/dev/cshool/frontend-boilerplate/node_modules/babel-loader/lib/index.js??ref--4-2!/Users/iwamoto/dev/cshool/frontend-boilerplate/node_modules/core-js/modules/es7.promise.try.js","dependencies":[{"path":"/Users/iwamoto/dev/cshool/frontend-boilerplate/node_modules/core-js/modules/es7.promise.try.js","mtime":1523240796000},{"path":"/Users/iwamoto/dev/cshool/frontend-boilerplate/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/iwamoto/dev/cshool/frontend-boilerplate/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iwamoto/dev/cshool/frontend-boilerplate/node_modules/babel-loader/lib/index.js","mtime":1520329890000}],"contextDependencies":[],"result":["'use strict';\n// https://github.com/tc39/proposal-promise-try\n\nvar $export = require('./_export');\nvar newPromiseCapability = require('./_new-promise-capability');\nvar perform = require('./_perform');\n\n$export($export.S, 'Promise', { 'try': function _try(callbackfn) {\n    var promiseCapability = newPromiseCapability.f(this);\n    var result = perform(callbackfn);\n    (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n    return promiseCapability.promise;\n  } });",{"version":3,"sources":["node_modules/core-js/modules/es7.promise.try.js"],"names":["$export","require","newPromiseCapability","perform","S","callbackfn","promiseCapability","f","result","e","reject","resolve","v","promise"],"mappings":"AAAA;AACA;;AACA,IAAIA,UAAUC,QAAQ,WAAR,CAAd;AACA,IAAIC,uBAAuBD,QAAQ,2BAAR,CAA3B;AACA,IAAIE,UAAUF,QAAQ,YAAR,CAAd;;AAEAD,QAAQA,QAAQI,CAAhB,EAAmB,SAAnB,EAA8B,EAAE,OAAO,cAAUC,UAAV,EAAsB;AAC3D,QAAIC,oBAAoBJ,qBAAqBK,CAArB,CAAuB,IAAvB,CAAxB;AACA,QAAIC,SAASL,QAAQE,UAAR,CAAb;AACA,KAACG,OAAOC,CAAP,GAAWH,kBAAkBI,MAA7B,GAAsCJ,kBAAkBK,OAAzD,EAAkEH,OAAOI,CAAzE;AACA,WAAON,kBAAkBO,OAAzB;AACD,GAL6B,EAA9B","file":"es7.promise.try.js","sourceRoot":"/Users/iwamoto/dev/cshool/frontend-boilerplate","sourcesContent":["'use strict';\n// https://github.com/tc39/proposal-promise-try\nvar $export = require('./_export');\nvar newPromiseCapability = require('./_new-promise-capability');\nvar perform = require('./_perform');\n\n$export($export.S, 'Promise', { 'try': function (callbackfn) {\n  var promiseCapability = newPromiseCapability.f(this);\n  var result = perform(callbackfn);\n  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n  return promiseCapability.promise;\n} });\n"]}]}