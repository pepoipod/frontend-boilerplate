{"remainingRequest":"/Users/iwamoto/dev/cshool/frontend-boilerplate/node_modules/thread-loader/dist/cjs.js??ref--4-1!/Users/iwamoto/dev/cshool/frontend-boilerplate/node_modules/babel-loader/lib/index.js??ref--4-2!/Users/iwamoto/dev/cshool/frontend-boilerplate/node_modules/core-js/modules/_string-pad.js","dependencies":[{"path":"/Users/iwamoto/dev/cshool/frontend-boilerplate/node_modules/core-js/modules/_string-pad.js","mtime":1523240795000},{"path":"/Users/iwamoto/dev/cshool/frontend-boilerplate/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/iwamoto/dev/cshool/frontend-boilerplate/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iwamoto/dev/cshool/frontend-boilerplate/node_modules/babel-loader/lib/index.js","mtime":1520329890000}],"contextDependencies":[],"result":["// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = require('./_to-length');\nvar repeat = require('./_string-repeat');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, maxLength, fillString, left) {\n  var S = String(defined(that));\n  var stringLength = S.length;\n  var fillStr = fillString === undefined ? ' ' : String(fillString);\n  var intMaxLength = toLength(maxLength);\n  if (intMaxLength <= stringLength || fillStr == '') return S;\n  var fillLen = intMaxLength - stringLength;\n  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\n  return left ? stringFiller + S : S + stringFiller;\n};",{"version":3,"sources":["node_modules/core-js/modules/_string-pad.js"],"names":["toLength","require","repeat","defined","module","exports","that","maxLength","fillString","left","S","String","stringLength","length","fillStr","undefined","intMaxLength","fillLen","stringFiller","call","Math","ceil","slice"],"mappings":"AAAA;AACA,IAAIA,WAAWC,QAAQ,cAAR,CAAf;AACA,IAAIC,SAASD,QAAQ,kBAAR,CAAb;AACA,IAAIE,UAAUF,QAAQ,YAAR,CAAd;;AAEAG,OAAOC,OAAP,GAAiB,UAAUC,IAAV,EAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,IAAvC,EAA6C;AAC5D,MAAIC,IAAIC,OAAOR,QAAQG,IAAR,CAAP,CAAR;AACA,MAAIM,eAAeF,EAAEG,MAArB;AACA,MAAIC,UAAUN,eAAeO,SAAf,GAA2B,GAA3B,GAAiCJ,OAAOH,UAAP,CAA/C;AACA,MAAIQ,eAAehB,SAASO,SAAT,CAAnB;AACA,MAAIS,gBAAgBJ,YAAhB,IAAgCE,WAAW,EAA/C,EAAmD,OAAOJ,CAAP;AACnD,MAAIO,UAAUD,eAAeJ,YAA7B;AACA,MAAIM,eAAehB,OAAOiB,IAAP,CAAYL,OAAZ,EAAqBM,KAAKC,IAAL,CAAUJ,UAAUH,QAAQD,MAA5B,CAArB,CAAnB;AACA,MAAIK,aAAaL,MAAb,GAAsBI,OAA1B,EAAmCC,eAAeA,aAAaI,KAAb,CAAmB,CAAnB,EAAsBL,OAAtB,CAAf;AACnC,SAAOR,OAAOS,eAAeR,CAAtB,GAA0BA,IAAIQ,YAArC;AACD,CAVD","file":"_string-pad.js","sourceRoot":"/Users/iwamoto/dev/cshool/frontend-boilerplate","sourcesContent":["// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = require('./_to-length');\nvar repeat = require('./_string-repeat');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, maxLength, fillString, left) {\n  var S = String(defined(that));\n  var stringLength = S.length;\n  var fillStr = fillString === undefined ? ' ' : String(fillString);\n  var intMaxLength = toLength(maxLength);\n  if (intMaxLength <= stringLength || fillStr == '') return S;\n  var fillLen = intMaxLength - stringLength;\n  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\n  return left ? stringFiller + S : S + stringFiller;\n};\n"]}]}